button,
.button {
  --color: var(--primary);
  --constrast-color: rgb(from var(--color) clamp(0, calc((0.2126 * r + 0.7152 * g + 0.0722 * b - 165) * -1000), 255) clamp(0, calc((0.2126 * r + 0.7152 * g + 0.0722 * b - 165) * -1000), 255) clamp(0, calc((0.2126 * r + 0.7152 * g + 0.0722 * b - 165) * -1000), 255));
  --bg-percentage: 95%;
  --height: 2.5rem;

  height: var(--height);
  color: var(--constrast-color);
  background-color: color-mix(in srgb, var(--color) var(--bg-percentage), transparent);
  display: flex;
  place-content: var(--c, center);
  place-items: var(--i, center);
  gap: calc(var(--height) / 10);
  padding: 0 calc(var(--height) / 2.5);
  cursor: pointer;
  border-radius: 10rem;
  font-size: var(--normal);
  font-family: inherit;
  transition: 0.1s translate;
  font-weight: 500;
  border: none;

  &:has(>iconify-icon) {
    --padding-left: calc(var(--height) / 3.33);
  }

  &[data-shape=square] {
    padding: 0;
    aspect-ratio: 1;
  }

  &[data-shape=padding] {
    padding: calc(1rem - var(--border-size));
    height: auto;
  }

  &[data-shape=menu] {
    gap: calc(var(--height) / 3.33);
    border-radius: 0;
    font-weight: normal;
  }

  &[data-style=gradient] {
    --initial-angle: 45deg;
    --final-angle: 135deg;
    --angle: var(--initial-angle);
    --gradient-color1: hsl(from var(--color) calc(h - 80) s l);
    --gradient-color2: hsl(from var(--color) calc(h - 40) s l);
    background: linear-gradient(var(--angle), var(--color), var(--gradient-color1));

    animation-name: rotate-reverse;
    animation-fill-mode: forwards;
    animation-duration: 0.2s;

    &:hover {
      animation-name: rotate;
      animation-duration: 0.2s;
    }

  }

  &[data-style=outline] {
    --color: var(--black);
    --border-percentage: 50%;
    --bg-percentage: 0%;

    box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--color) var(--border-percentage), transparent);
    color: var(--color);

    &:hover {
      --border-percentage: 100%;
    }
  }

  &[data-style=text] {
    --color: var(--black);
    color: var(--color);
    --bg-percentage: 0%;

    &:hover {
      --bg-percentage: 10%;
    }

    &[data-active=true] {
      --bg-percentage: 10%;
    }
  }

  &[data-style=tonal] {
    --color: var(--black);
    color: var(--color);
    --bg-percentage: 7%;

    &:hover {
      --bg-percentage: 10%
    }

    &[data-active=true] {
      --bg-percentage: 100%;
      color: var(--constrast-color);
    }
  }

  &[data-size=small] {
    --height: 2.25rem;
  }

  &[data-size=tiny] {
    --height: 2rem;
  }

  &:not([data-style]):hover {
    --bg-percentage: 100%;
  }

  &[disabled] {
    opacity: 0.5;
    pointer-events: none;
  }

  &[data-active=false] {
    font-weight: 400;
  }

  &[data-active=true] {

    iconify-icon {
      &[data-status=active] {
        display: block;
      }

      &[data-status=default] {
        display: none;
      }
    }
  }

  &:active {
    translate: 0 0.25rem;
  }
}


button,
.button,
a {
  iconify-icon {
    &[data-status=active] {
      display: none;
    }
  }

  &:is(:hover, :focus) iconify-icon {
    &[data-status=active] {
      display: block;
    }

    &[data-status=default] {
      display: none;
    }
  }
}